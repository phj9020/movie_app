{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","components/Navigation.js","components/Detail.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Navigation","Detail","prop","location","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8XAmDeA,MA7Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OAGE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRC,OAAQA,KAIZ,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,gBAEXD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,WCiCKC,G,kNA1DbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IACd,4DARQ,gBAKEJ,EALF,EAIRK,KACEA,KAAQL,OASZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAdzB,2C,kEAmBVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASb,UAAU,aAChBY,EACC,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZa,EAAOP,KAAI,SAACe,GAAD,OACV,kBAAC,EAAD,CACEZ,IAAKY,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GAjDXwB,IAAMC,Y,MCDVC,MALf,SAAeC,GAEb,OADEC,QAAQC,IAAIF,GACP,iE,MCQMG,MATf,WACE,OACE,yBAAK7B,UAAU,OAEb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,QACA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAA5B,WCcS8B,E,gLApBOC,GAAK,MAGSX,KAAKM,MAA1BM,EAHY,EAGZA,SAAUC,EAHE,EAGFA,aAEKC,IAAnBF,EAAS7B,OACR8B,EAAQE,KAAK,O,+BAGZ,IACEH,EAAYZ,KAAKM,MAAjBM,SACP,OAAIA,EAAS7B,MACF,8BAAO6B,EAAS7B,MAAMP,OAEtB,S,GAfE2B,IAAMC,W,MCqBZY,MAdf,WACE,OACE,kBAAC,IAAD,KAIE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,kBAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWd,IAChC,kBAAC,IAAD,CAAOY,KAAK,aAAaE,UAAWT,MCb1CU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dc41695a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\n//state 가 필요없으면 class component일 필요가 없다\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    // 영화 클릭 시 디테일 페이지 이동 시 state 데이터를 보내기 위해\r\n    // 링크로 html영역을 감싸서 정보를 라우터로 보낸다 (App.js의 component={Detail}) 그러므로 Detail.js에서 해당 정보 사용을 할 수 있다.\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year: year,\r\n            title: title,\r\n            summary: summary,\r\n            poster: poster,\r\n            genres: genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genre\">\r\n            {/* genres 어레이에 key를 넣어줘야해서 2번째로 index argument를 넣어줌 */}\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n//fetch data from https://yts.mx/api#list_movies endpoint json file\r\n\r\n// class component has render method, not return method\r\n// 리엑트는 자동적으로 class component의 render method를 자동으로 실행한다\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  // axios is layer on the top of fetch() = 사전 설치 (npm install axios) axios.get을 이용하여  API movie 리스트를 가져온다\r\n  // async함수를 써야 await을 쓸 수 있다  = axios.get으로 접근이 끝날때까지 기다려라\r\n  // getmovie 함수\r\n  getMovies = async () => {\r\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n    // console.log(movies.data.data.movies)  <<  movies 안에 data 안에 data 안에 movies 가지고 와야 해서\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    // data 안에 있는 movies 를 state 의 movies array안에 넣는다\r\n    // state의  movie : movies from axios\r\n    // this.setState({movie : movies})\r\n    // 위의 short cut은 아래 & modifying state\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n\r\n  // 랜더링 후 마운트되면 getmovie 함수 호출\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n  return <span>Aboust this page : I build it </span>;\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      {/* <a href=\"/\">Home</a> 로 하게 되면 클릭시 페이지가 리프레쉬 되면서 리엑트가 죽는 문제가 있으므로 <Link t0>사용*/}\r\n      <Link to=\"/\" className=\"navi__home\">Home</Link>\r\n      <Link to=\"/about\" className=\"navi__about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(prop){\r\n        // url에 movie-detail쳐서 들어가면 홈으로 리다이렉트 되게 만듦\r\n        \r\n        const {location, history} = this.props;\r\n        // console.log(this.props);\r\n        if(location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render(){\r\n        const {location} = this.props;\r\n        if (location.state) {\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./components/Detail\"\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      {/* Route Prop path가 url : /about 이면 {About 컴포넌트를 보여줘라} */}\n      {/* exact={true} 정확히 일치할 때만 해당 컴포넌트를 랜더링해라 */}\n      {/* Navigation has to be inside of Router */}\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}